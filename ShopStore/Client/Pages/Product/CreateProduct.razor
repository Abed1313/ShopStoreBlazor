@page "/product/create"
@using ShopStore.Client.Services
@using ShopStore.Shared.Models
@using ShopStore.Shared.Models.DTO
@inject ProductService ProductService
@inject CategoryService CategoryService
@inject NavigationManager NavigationManager

<h3>Create Product</h3>

<EditForm Model="newProduct" OnValidSubmit="HandleCreate">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Name:</label>
        <InputText @bind-Value="newProduct.Name" class="form-control" />
    </div>
    <div class="form-group">
        <label>Description:</label>
        <InputTextArea @bind-Value="newProduct.Description" class="form-control" />
    </div>
    <div class="form-group">
        <label>Price:</label>
        <InputNumber @bind-Value="newProduct.Price" class="form-control" />
    </div>
    <div class="form-group">
        <label>Stock Quantity:</label>
        <InputNumber @bind-Value="newProduct.StockQuantity" class="form-control" />
    </div>
    <div class="form-group">
        <label>Image URL:</label>
        <InputText @bind-Value="newProduct.ImageUrl" class="form-control" />
    </div>
    <div class="form-group">
        <label>Category:</label>
        <InputSelect @bind-Value="newProduct.CategoryId" class="form-control">
            <option value="">Select a category</option>
            @foreach (var category in categories)
            {
                <option value="@category.CategoryId">@category.Name</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

@code {
    private ProductDTO newProduct = new ProductDTO();
    private List<Category> categories;

    protected override async Task OnInitializedAsync()
    {
        // Fetch categories for dropdown
        categories = await CategoryService.GetCategoriesAsync();
    }

    private async Task HandleCreate()
    {
        // Create the product using the ProductService
        await ProductService.CreateProductAsync(newProduct);
        NavigationManager.NavigateTo("/products");
    }
}
